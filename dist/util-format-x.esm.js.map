{"version":3,"sources":["../src/util-format-x.js"],"names":[],"mappings":"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","file":"util-format-x.esm.js","sourcesContent":["import inspect from 'inspect-x';\nimport objectIs from 'same-value-x';\nimport hasOwnProperty from 'has-own-property-x';\nimport parseIntX from 'parse-int-x';\nimport {stringify} from 'json3';\nimport {SetConstructor} from 'collections-x';\nimport arrayFilter from 'array-filter-x';\nimport getOwnPropertyNames from 'get-own-property-names-x';\nimport isSymbol from 'is-symbol';\nimport isBigint from 'is-bigint';\nimport toNumber from 'to-number-x';\nimport attempt from 'attempt-x';\nimport toStr from 'to-string-symbols-supported-x';\nimport assign from 'object-assign-x';\n\n/* eslint-disable-next-line no-void */\nconst UNDEFINED = void 0;\nconst RX_NAMES = /^([A-Z][a-z]+)+$/;\nconst rxTest = RX_NAMES.test;\nconst EMPTY_STRING = '';\nconst {split, slice: stringSlice, charCodeAt} = EMPTY_STRING;\n\nconst firstErrorLine = function firstErrorLine(error) {\n  return split.call(error.message, '\\n')[0];\n};\n\nlet CIRCULAR_ERROR_MESSAGE;\n\nconst populateMessage = function populateMessage() {\n  // Populate the circular error message lazily\n  if (!CIRCULAR_ERROR_MESSAGE) {\n    const res = attempt(function attemptee() {\n      const a = {};\n      a.a = a;\n      stringify(a);\n    });\n\n    CIRCULAR_ERROR_MESSAGE = firstErrorLine(res.value);\n  }\n};\n\nconst tryStringify = function tryStringify(arg) {\n  const res = attempt(function attemptee() {\n    return stringify(arg);\n  });\n\n  if (res.threw) {\n    populateMessage();\n    const err = res.value;\n\n    if (err.name === 'TypeError' && firstErrorLine(err) === CIRCULAR_ERROR_MESSAGE) {\n      return '[Circular]';\n    }\n\n    throw err;\n  }\n\n  return res.value;\n};\n\nconst matchNames = function matchNames(e) {\n  return rxTest.call(RX_NAMES, e);\n};\n\nconst builtInObjects = new SetConstructor(arrayFilter(getOwnPropertyNames(global), matchNames));\n\nconst formatNumber = function formatNumber(fn, value) {\n  // Format -0 as '-0'. Checking `value === -0` won't distinguish 0 from -0.\n  return fn(objectIs(value, -0) ? '-0' : `${value}`, 'number');\n};\n\nconst stylizeNoColor = function stylizeNoColor(str) {\n  return str;\n};\n\nexport const formatWithOptions = function formatWithOptions(inspectOptions, args) {\n  const first = args[0];\n  let a = 0;\n  let str = EMPTY_STRING;\n  let join = EMPTY_STRING;\n\n  if (typeof first === 'string') {\n    if (args.length === 1) {\n      return first;\n    }\n\n    let tempStr;\n    let lastPos = 0;\n\n    for (let i = 0; i < first.length - 1; i += 1) {\n      if (charCodeAt.call(first, i) === 37) {\n        // '%'\n        i += 1;\n        const nextChar = charCodeAt.call(first, i);\n\n        if (a + 1 !== args.length) {\n          switch (nextChar) {\n            case 115: // 's'\n              a += 1;\n              {\n                const tempArg = args[a];\n\n                if (typeof tempArg === 'number') {\n                  tempStr = formatNumber(stylizeNoColor, tempArg);\n                } else {\n                  /* eslint-disable-next-line no-lonely-if */\n                  if (typeof tempArg === 'bigint') {\n                    tempStr = `${tempArg}n`;\n                  } else {\n                    const constr = typeof tempArg === 'object' && tempArg !== null ? tempArg.constructor : UNDEFINED;\n\n                    // noinspection JSObjectNullOrUndefined\n                    if (\n                      !constr ||\n                      (typeof tempArg.toString === 'function' &&\n                        // A direct own property.\n                        (hasOwnProperty(tempArg, 'toString') ||\n                          // A direct own property on the constructor prototype in\n                          // case the constructor is not an built-in object.\n                          (!builtInObjects.has(constr.name) && constr.prototype && hasOwnProperty(constr.prototype, 'toString'))))\n                    ) {\n                      tempStr = toStr(tempArg);\n                    } else {\n                      tempStr = inspect(tempArg, assign({}, inspectOptions, {compact: 3, colors: false, depth: 0}));\n                    }\n                  }\n                }\n              }\n\n              break;\n\n            case 106: // 'j'\n              a += 1;\n              tempStr = tryStringify(args[a]);\n\n              break;\n\n            case 100: // 'd'\n              a += 1;\n              {\n                const tempNum = args[a];\n\n                if (isBigint(tempNum)) {\n                  tempStr = `${tempNum}n`;\n                } else if (isSymbol(tempNum)) {\n                  tempStr = 'NaN';\n                } else {\n                  tempStr = formatNumber(stylizeNoColor, toNumber(tempNum));\n                }\n              }\n\n              break;\n\n            case 79: // 'O'\n              a += 1;\n              tempStr = inspect(args[a], inspectOptions);\n\n              break;\n\n            case 111:\n              // 'o'\n              a += 1;\n              tempStr = inspect(args[a], assign({}, inspectOptions, {showHidden: true, showProxy: true, depth: 4}));\n\n              break;\n\n            case 105: // 'i'\n              a += 1;\n              {\n                const tempInteger = args[a];\n\n                if (isBigint(tempInteger)) {\n                  tempStr = `${tempInteger}n`;\n                } else if (isSymbol(tempInteger)) {\n                  tempStr = 'NaN';\n                } else {\n                  tempStr = formatNumber(stylizeNoColor, parseIntX(tempInteger));\n                }\n              }\n\n              break;\n\n            case 102: // 'f'\n              a += 1;\n              {\n                const tempFloat = args[a];\n\n                if (isSymbol(tempFloat)) {\n                  tempStr = 'NaN';\n                } else {\n                  tempStr = formatNumber(stylizeNoColor, parseFloat(tempFloat));\n                }\n              }\n\n              break;\n\n            case 37: // '%'\n              str += stringSlice.call(first, lastPos, i);\n              lastPos = i + 1;\n              /* eslint-disable-next-line no-continue */\n              continue;\n\n            default:\n              // Any other character is not a correct placeholder\n              /* eslint-disable-next-line no-continue */\n              continue;\n          }\n\n          if (lastPos !== i - 1) {\n            str += stringSlice.call(first, lastPos, i - 1);\n          }\n\n          str += tempStr;\n          lastPos = i + 1;\n        } else if (nextChar === 37) {\n          str += stringSlice.call(first, lastPos, i);\n          lastPos = i + 1;\n        }\n      }\n    }\n\n    if (lastPos !== 0) {\n      a += 1;\n      join = ' ';\n\n      if (lastPos < first.length) {\n        str += stringSlice.call(first, lastPos);\n      }\n    }\n  }\n\n  while (a < args.length) {\n    const value = args[a];\n    str += join;\n    str += typeof value !== 'string' ? inspect(value, inspectOptions) : value;\n    join = ' ';\n    a += 1;\n  }\n\n  return str;\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * The format() method returns a formatted string using the first argument as a\n * printf-like format.\n *\n * The first argument is a string containing zero or more placeholder tokens.\n * Each placeholder token is replaced with the converted value from the\n * corresponding argument.\n *\n * @param {string} f - Template.\n * @param {*} [...args] - Values.\n * @returns {*} The target.\n */\n// eslint-enable jsdoc/check-param-names\nexport const format = function format() {\n  /* eslint-disable-next-line prefer-rest-params */\n  return formatWithOptions(UNDEFINED, arguments);\n};\n"]}